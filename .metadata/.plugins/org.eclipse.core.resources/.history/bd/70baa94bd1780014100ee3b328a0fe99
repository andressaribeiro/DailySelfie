package com.coursera.dailyselfie;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import android.annotation.SuppressLint;
import android.app.ListActivity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ListAdapter;

public class DailySelfieActivity extends ListActivity {

	private static final int TAKE_PHOTO_REQUEST_CODE = 1;

	private ListAdapter mAdapter;

	private static final String JPEG_FILE_PREFIX = "IMG_";

	private static final String JPEG_FILE_SUFFIX = ".jpg";

	private static final String CAMERA_DIR = "/dcim/";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		mAdapter = new SelfieViewAdapter(getApplicationContext());
		setListAdapter(mAdapter);
	}

	private void startImageCaptureIntent() {
		Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);

		File file = null;

		try {
			file = setUpPhotoFile();
			intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(file));
		} catch (IOException e) {
			e.printStackTrace();
			file = null;
			mCurrentPhotoPath = null;
		}

		startActivityForResult(intent, TAKE_PHOTO_REQUEST_CODE);
	}

	private File setUpPhotoFile() throws IOException {
		File file = createImageFile();
		mCurrentPhotoPath = file.getAbsolutePath();
		return file;
	}

	@SuppressLint("SimpleDateFormat")
	private File createImageFile() throws IOException {
		String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
		String imageFileName = JPEG_FILE_PREFIX + timeStamp + "_";
		File albumFile = getAlbumDirectory();
		File imageFile = File.createTempFile(imageFileName, JPEG_FILE_SUFFIX, albumFile);
		
		return imageFile;
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (resultCode == RESULT_OK) {
			mAdapter = new SelfieViewAdapter(getApplicationContext());
			setListAdapter(mAdapter);
		}
	}

	public File getStorageDirectory(String albumName) {
		return new File(Environment.getExternalStorageDirectory() + CAMERA_DIR + albumName);
	}

	private File getAlbumDirectory() {
		File storageDir = null;

		if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {

			storageDir = getStorageDirectory("Daily");

			if (storageDir != null) {
				if (!storageDir.mkdirs()) {
					if (!storageDir.exists()) {
						Log.d("CameraSample", "failed to create directory");
						return null;
					}
				}
			}

		} else {
			Log.v(getString(R.string.app_name), "External storage is not mounted READ/WRITE.");
		}

		return storageDir;
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.daily_selfie, menu);

		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		int id = item.getItemId();

		if (id == R.id.action_camera) {
			startImageCaptureIntent();
			return true;
		}

		return super.onOptionsItemSelected(item);
	}

}
